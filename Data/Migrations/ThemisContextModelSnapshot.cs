// <auto-generated />
using System;
using Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(ThemisContext))]
    partial class ThemisContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.DatabaseModels.BackLogItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActualTime")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstimatedTime")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SprintId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorksOnItusername")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("WorksOnItusername");

                    b.ToTable("BackLogItems");
                });

            modelBuilder.Entity("Data.DatabaseModels.InvitationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("username");

                    b.ToTable("Invitation");
                });

            modelBuilder.Entity("Data.DatabaseModels.Project", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Data.DatabaseModels.Sprint", b =>
                {
                    b.Property<int>("SprintId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("SprintId");

                    b.ToTable("Sprints");
                });

            modelBuilder.Entity("Data.DatabaseModels.User", b =>
                {
                    b.Property<string>("username")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Data.DatabaseModels.UserStory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserStories");
                });

            modelBuilder.Entity("Data.DatabaseModels.WorkGroup", b =>
                {
                    b.Property<int>("WorkGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Creatorusername")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductOwnerusername")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ScrumMasterusername")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("WorkGroupId");

                    b.HasIndex("Creatorusername");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("ProductOwnerusername");

                    b.HasIndex("ScrumMasterusername");

                    b.ToTable("WorkGroups");
                });

            modelBuilder.Entity("Data.DatabaseModels.WorkGroupDeveloper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Developerusername")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("WorkGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Developerusername");

                    b.HasIndex("WorkGroupId");

                    b.ToTable("WorkGroupDevelopers");
                });

            modelBuilder.Entity("Data.DatabaseModels.BackLogItem", b =>
                {
                    b.HasOne("Data.DatabaseModels.User", "WorksOnIt")
                        .WithMany()
                        .HasForeignKey("WorksOnItusername");
                });

            modelBuilder.Entity("Data.DatabaseModels.InvitationModel", b =>
                {
                    b.HasOne("Data.DatabaseModels.Project", "Project")
                        .WithMany()
                        .HasForeignKey("Name");

                    b.HasOne("Data.DatabaseModels.User", "User")
                        .WithMany()
                        .HasForeignKey("username");
                });

            modelBuilder.Entity("Data.DatabaseModels.WorkGroup", b =>
                {
                    b.HasOne("Data.DatabaseModels.User", "Creator")
                        .WithMany()
                        .HasForeignKey("Creatorusername");

                    b.HasOne("Data.DatabaseModels.Project", "Project")
                        .WithOne("WorkGroup")
                        .HasForeignKey("Data.DatabaseModels.WorkGroup", "Name");

                    b.HasOne("Data.DatabaseModels.User", "ProductOwner")
                        .WithMany()
                        .HasForeignKey("ProductOwnerusername");

                    b.HasOne("Data.DatabaseModels.User", "ScrumMaster")
                        .WithMany()
                        .HasForeignKey("ScrumMasterusername");
                });

            modelBuilder.Entity("Data.DatabaseModels.WorkGroupDeveloper", b =>
                {
                    b.HasOne("Data.DatabaseModels.User", "Developer")
                        .WithMany()
                        .HasForeignKey("Developerusername");

                    b.HasOne("Data.DatabaseModels.WorkGroup", "WorkGroup")
                        .WithMany()
                        .HasForeignKey("WorkGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
